apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.uxxu.konashi.inspector.android"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 200000
        versionName "2.0"
    }
    signingConfigs {
        release {
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    /*applicationVariants.all { variant ->
        def output = variant.outputs.get(0)
        File apk = output.outputFile
        String newName = output.outputFile.name
                .replace('.apk', "-${variant.mergedFlavor.versionName}-${variant.mergedFlavor.versionCode}.apk")
                .replace('app-', "${variant.mergedFlavor.applicationId}-")
        output.outputFile = new File(apk.parentFile, newName)
    }*/
}
kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.github.hotchemi:permissionsdispatcher:3.3.2"
    kapt "com.github.hotchemi:permissionsdispatcher-processor:3.3.2"

    implementation 'com.uxxu.konashi:konashi-android-sdk:2.1.1'
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    configurations.all {
        exclude group: 'com.android.support', module: 'support-v13'
    }
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.jakewharton:butterknife:8.8.1'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

// credentials/release.keystore.properties::
//
//     storeFile={$pathToProject}/credentials/release.keystore
//     storePassword={$storePassword}
//     keyAlias=magnum
//     keyPassword={$keyPassword}
//
File signingPropertiesFile = rootProject.file('credentials/release.keystore.properties')
if (signingPropertiesFile.exists()) {
    Properties props = new Properties()
    props.load(new FileInputStream(signingPropertiesFile))
    android.signingConfigs.release.storeFile = file(props.storeFile)
    android.signingConfigs.release.storePassword = props.storePassword
    android.signingConfigs.release.keyAlias = props.keyAlias
    android.signingConfigs.release.keyPassword = props.keyPassword
}